import { NextResponse } from "next/server"

export async function GET() {
  try {
    console.log("üîÑ –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å USD/UAH —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π API...")

    // –ü—Ä–æ–±—É–µ–º –ø–µ—Ä–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ - ExchangeRate-API
    try {
      console.log("–ü—Ä–æ–±—É–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫: https://api.exchangerate-api.com/v4/latest/USD")
      const response = await fetch("https://api.exchangerate-api.com/v4/latest/USD", {
        cache: "no-store",
        headers: {
          "User-Agent": "Mozilla/5.0 (compatible; CryptoApp/1.0)",
        },
      })

      if (response.ok) {
        const data = await response.json()
        const uahRate = data.rates?.UAH

        if (uahRate && typeof uahRate === "number" && uahRate > 0) {
          console.log("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –∫—É—Ä—Å:", uahRate, "UAH –∑–∞ 1 USD")
          return NextResponse.json({
            success: true,
            rate: uahRate,
            source: "ExchangeRate-API",
            timestamp: new Date().toISOString(),
          })
        }
      }
    } catch (error) {
      console.warn("ExchangeRate-API failed:", error)
    }

    // –ü—Ä–æ–±—É–µ–º –≤—Ç–æ—Ä–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫ - Open Exchange Rates
    try {
      console.log("–ü—Ä–æ–±—É–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫: https://open.er-api.com/v6/latest/USD")
      const response = await fetch("https://open.er-api.com/v6/latest/USD", {
        cache: "no-store",
        headers: {
          "User-Agent": "Mozilla/5.0 (compatible; CryptoApp/1.0)",
        },
      })

      if (response.ok) {
        const data = await response.json()
        const uahRate = data.rates?.UAH

        if (uahRate && typeof uahRate === "number" && uahRate > 0) {
          console.log("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –∫—É—Ä—Å:", uahRate, "UAH –∑–∞ 1 USD")
          return NextResponse.json({
            success: true,
            rate: uahRate,
            source: "Open Exchange Rates",
            timestamp: new Date().toISOString(),
          })
        }
      }
    } catch (error) {
      console.warn("Open Exchange Rates failed:", error)
    }

    // –ü—Ä–æ–±—É–µ–º —Ç—Ä–µ—Ç–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫ - Fixer.io (–±–µ—ÅÔøΩÔøΩ–ª–∞—Ç–Ω—ã–π –ø–ª–∞–Ω)
    try {
      console.log("–ü—Ä–æ–±—É–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫: http://data.fixer.io/api/latest")
      const response = await fetch("http://data.fixer.io/api/latest?access_key=YOUR_FREE_KEY&base=USD&symbols=UAH", {
        cache: "no-store",
        headers: {
          "User-Agent": "Mozilla/5.0 (compatible; CryptoApp/1.0)",
        },
      })

      if (response.ok) {
        const data = await response.json()
        const uahRate = data.rates?.UAH

        if (uahRate && typeof uahRate === "number" && uahRate > 0) {
          console.log("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –∫—É—Ä—Å:", uahRate, "UAH –∑–∞ 1 USD")
          return NextResponse.json({
            success: true,
            rate: uahRate,
            source: "Fixer.io",
            timestamp: new Date().toISOString(),
          })
        }
      }
    } catch (error) {
      console.warn("Fixer.io failed:", error)
    }

    // –ï—Å–ª–∏ –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º fallback
    console.log("‚ö†Ô∏è –í—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –∫—É—Ä—Å")
    return NextResponse.json({
      success: false,
      rate: 41.5,
      source: "Fallback",
      timestamp: new Date().toISOString(),
      warning: "–í—Å–µ –≤–Ω–µ—à–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∫—É—Ä—Å",
    })
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤ API exchange-rate:", error)
    return NextResponse.json({
      success: false,
      rate: 41.5,
      source: "Error Fallback",
      timestamp: new Date().toISOString(),
      warning: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞",
    })
  }
}
